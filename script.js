// Assignment Code
var generateBtn = document.querySelector("#generate");

// Add event listener to generate button
generateBtn.addEventListener("click", writePassword);

// Write password to the #password input
function writePassword() {
  var password = generatePassword();
  var passwordText = document.querySelector("#password");

  passwordText.value = password;
}

// TODO: Write code so the generatePassword returns a string for a password
// which meets the requirements in the instructions.



function generatePassword() {
   
  //userLengthChoice
  var userLengthChoice = prompt("How many characters do you wish to include in your password");
    if(userLengthChoice >= 8 && userLengthChoice <= 128){

      //desiredLowerCase
      var desiredLowerCase = confirm ("Do you want your password to include lowercase letters?")
      if (desiredLowerCase === true){
        //add desiredLowerCase to valuesToInclude 
      }else{
        //add desiredLowerCase to valuesNotToInclude
      }

      console.log(desiredLowerCase);
      console.log(!desiredLowerCase);

      //desiredUpperCase
      var desiredUpperCase = confirm ("Do you want your password to include uppercase letters?")
      if (desiredUpperCase === true){
        //add desiredUpperCase to valuesToInclude
      }else{
        //add desiredLowerCase to valuesNotToInclude
      }

      console.log(desiredLowerCase);
      console.log(!desiredLowerCase);


      //desiredNumbers
      var desiredNumbers = confirm ("Do you want your password to include numbers letters?")
      if (desiredNumbers === true){
        //add desiredNumber to valuesToInclude
      }else{
        //add desiredNumber to valuesNotToInclude
      }

      console.log(desiredNumbers);
      console.log(!desiredNumbers);


      //desiredSpecialCharacters
      var desiredSpecialCharacters = confirm ("Do you want your password to include special characters letters?")
      if(desiredSpecialCharacters === true){
        //add desiredSpecialCharacter to valuesToInclude
      }else{
        //add desiredSpecialCharacter to valuesNotToInclude
      }

      console.log(desiredSpecialCharacters);
      console.log(!desiredSpecialCharacters);
      
    }else{
        alert("Please choose a number between 8 and 128");
      generatePassword();
    }
}


//getRandomValues generated by the following four functions, console.logs to verfy results         

function acceptedRandomValues () {


};

//getRandomLower
function getRandomLower() {
  return String.fromCharCode(Math.floor(Math.random()* 26) + 97);
}

console.log(getRandomLower());

//getRandomUpper
function getRandomUpper () {
  return String.fromCharCode(Math.floor(Math.random()* 26) + 65);
}

console.log(getRandomUpper());

//getRandomNumber
function getRandomNumber () {
  return String.fromCharCode(Math.floor(Math.random()* 10) + 48);
}

console.log(getRandomNumber());

//getRandomSymbol
function getRandomSymbol () {
  var symbols = "!@#$%^&*()_+{}|:<>?/.,;\][=-";
  return symbols[Math.floor(Math.random()* symbols.length)];
}

console.log(getRandomSymbol());



//------ notes on random value generation
// generate random values upperCase, lowerCase, numbers, symbols
// lowerCase and numbers using .fromCharCode(#)
// for lowerCase,  
// String.fromCharCode(#), string aspect concecrates all # values together 
// using Math.floor(Math.random()*26) + 97 
// Math.floor sets random to whole numbers
// *26 makes specifies the range
// + 97 changes starting point by 97
// for upperCase
// +65 changes starting point 
// for getRandomSymbols, set var = to symbols
// in return use symbols[]
// Math.floor(Math.random()* symbols.length)
// multiply by symbols.length so random circulates and picks one of the many index values.






//------------------Brainstorming bellow 

    // endPassword = passwordLength + lowerCase + upperCase + symbols + numbers  =

      
    //WHEN I click the button to generate a password
      //generateBtn.addEventListener ('click)
    //THEN I am presented with a series of prompts for password criteria
      //then discoverUserChoices ["desiredLength" + "desireNumbers" + "desireSymbols" + "desireUpper" + "desireLower"]
      // ""
    //WHEN prompted for password criteria
    // var = desiredLowerCase confirm ("Do you want your password to include lowercase letters?")
    // var = desiredUpperCase confirm ("Do you want your password to include uppercase letters?")
    // var = desiredNumbers confirm ("Do you want your password to include numbers letters?")
    // var = desiredSpecialCharacters confirm ("Do you want your password to include special characters  letters?")
    // var = desiredLength prompt("How many passwords characters in password ") 
    //THEN I select which criteria to include in the password
        //  desiredLowerCase, desiredUpperCase, desiredNumbers, desiredSpecialCharacters are all confirm
        //  above list should be object, discoverUserChoices
        //  if confirm's === true, include in passwordGeneration
        //  if confirms !== true, do not include in password generation 



    //WHEN prompted for character types to include in the password
      //desiredCharacterTypes [length, lowercase, uppercase, numeric, special characters]
    //THEN I choose lowercase, uppercase, numeric, and/or special characters
    //Then values are validadted/logged to be used in final generation 

    //WHEN I answer each prompt
      //desiredCharacterTypes inputs 
    //THEN my input should be validated and at least one character type should be selected
      //require 1 input type to be selected true 

    //WHEN all prompts are answered
      //when desiredCharacterTypes / desiredUsersInput complete
    //THEN a password is generated that matches the selected criteria
      //then generatePassword using values from desiredCharacterTypes/ desiredUsersInput
      // to instruct generatePassword as of to what values to use

    //WHEN the password is generated
      //when password === made
    //THEN the password is either displayed in an alert or written to the page
      //alert passwordMade  &or write password on the page 